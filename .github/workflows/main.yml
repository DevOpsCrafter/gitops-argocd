name: CI

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push the Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Azure Container Registry (ACR)
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build, tag, and push image to Azure Container Registry (ACR)
        env:
          REGISTRY_NAME: ${{ secrets.REGISTRY_NAME }}
        run: |
          git_hash=$(git rev-parse --short "${{ github.sha }}")
          image_tag="$git_hash"
          docker build -t $REGISTRY_NAME.azurecr.io/myimage:$image_tag .
          echo "Pushing image to ACR..."
          docker push $REGISTRY_NAME.azurecr.io/myimage:$image_tag

      - name: Update version
        run: | 
          git_hash=$(git rev-parse --short "${{ github.sha }}")
          sed -i "s/version:.*/version: ${{ github.ref }}-$git_hash/" ./manifests/deployment.yaml

      - name: Commit and push changes
        uses: devops-infra/action-commit-push@v0.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit_message: Version updated

  deploy:
    needs: build
    name: Deploy with Argo CD
    runs-on: ubuntu-latest

    steps:
      - name: Install Argo CD CLI
        run: |
          wget https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64 -O /usr/local/bin/argocd
          chmod +x /usr/local/bin/argocd

      - name: Configure Argo CD
        run: |
          argocd login --insecure --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --grpc-web ${{ secrets.ARGOCD_API_SERVER }}

      - name: Sync Application
        run: |
          argocd app sync my-app --wait
